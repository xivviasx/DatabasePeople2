{"ast":null,"code":"var _jsxFileName = \"J:\\\\Desktop\\\\projektreact\\\\src\\\\components\\\\crud\\\\praca\\\\PracaPOST.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PracaPOST = () => {\n  _s();\n  const [nazwaStanowiska, setNazwaStanowiska] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newPraca = {\n      nazwaStanowiska: nazwaStanowiska || undefined\n    };\n    try {\n      // Sending a POST request using axios\n      await axios.post('http://localhost:8080/praca', newPraca);\n      // Redirect to HomePage after adding a job\n      navigate('/home');\n    } catch (error) {\n      console.error('Error while sending POST request:', error);\n    }\n\n    // Clear input values after submission\n    setNazwaStanowiska('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"curd\",\n    onSubmit: handleSubmit,\n    style: {\n      marginLeft: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Nazwa stanowiska:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: nazwaStanowiska,\n        onChange: e => setNazwaStanowiska(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Dodaj prac\\u0119\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(PracaPOST, \"YCxkqkmiPRacEmGN5AdLgXqtUhg=\", false, function () {\n  return [useNavigate];\n});\n_c = PracaPOST;\nexport default PracaPOST;\nvar _c;\n$RefreshReg$(_c, \"PracaPOST\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","PracaPOST","_s","nazwaStanowiska","setNazwaStanowiska","navigate","handleSubmit","e","preventDefault","newPraca","undefined","post","error","console","className","onSubmit","style","marginLeft","children","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["J:/Desktop/projektreact/src/components/crud/praca/PracaPOST.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst PracaPOST = () => {\r\n    const [nazwaStanowiska, setNazwaStanowiska] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const newPraca = {\r\n            nazwaStanowiska: nazwaStanowiska || undefined,\r\n        };\r\n\r\n        try {\r\n            // Sending a POST request using axios\r\n            await axios.post('http://localhost:8080/praca', newPraca);\r\n            // Redirect to HomePage after adding a job\r\n            navigate('/home');\r\n        } catch (error) {\r\n            console.error('Error while sending POST request:', error);\r\n        }\r\n\r\n        // Clear input values after submission\r\n        setNazwaStanowiska('');\r\n    };\r\n\r\n    return (\r\n        <form className=\"curd\" onSubmit={handleSubmit} style={{ marginLeft: '20px' }}>\r\n            <label>\r\n                Nazwa stanowiska:\r\n                <input type=\"text\" value={nazwaStanowiska} onChange={(e) => setNazwaStanowiska(e.target.value)} />\r\n            </label>\r\n            <br />\r\n            <button type=\"submit\">Dodaj pracÄ™</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default PracaPOST;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMS,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,QAAQ,GAAG;MACbN,eAAe,EAAEA,eAAe,IAAIO;IACxC,CAAC;IAED,IAAI;MACA;MACA,MAAMb,KAAK,CAACc,IAAI,CAAC,6BAA6B,EAAEF,QAAQ,CAAC;MACzD;MACAJ,QAAQ,CAAC,OAAO,CAAC;IACrB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC7D;;IAEA;IACAR,kBAAkB,CAAC,EAAE,CAAC;EAC1B,CAAC;EAED,oBACIJ,OAAA;IAAMc,SAAS,EAAC,MAAM;IAACC,QAAQ,EAAET,YAAa;IAACU,KAAK,EAAE;MAAEC,UAAU,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACzElB,OAAA;MAAAkB,QAAA,GAAO,mBAEH,eAAAlB,OAAA;QAAOmB,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEjB,eAAgB;QAACkB,QAAQ,EAAGd,CAAC,IAAKH,kBAAkB,CAACG,CAAC,CAACe,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/F,CAAC,eACR1B,OAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN1B,OAAA;MAAQmB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEf,CAAC;AAACxB,EAAA,CAnCID,SAAS;EAAA,QAGMH,WAAW;AAAA;AAAA6B,EAAA,GAH1B1B,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}